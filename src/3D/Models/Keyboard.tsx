/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useRef } from "react";
import { useGLTF } from "@react-three/drei";

type GLTFResult = {
    nodes: {
        Case: THREE.Mesh;
        Keyboard_cable: THREE.Mesh;
        Keycaps: THREE.Mesh;
    };
    materials: {
        ["Black rubber"]: THREE.MeshStandardMaterial;
        ["Keycap material"]: THREE.MeshStandardMaterial;
    };
};

export default function KeyboardModel(props: JSX.IntrinsicElements["group"]) {
    const group = useRef<THREE.Group>(null);
    const { nodes, materials } = useGLTF(
        "/models/keyboardModel.gltf"
    ) as unknown as GLTFResult;
    return (
        <group ref={group} {...props} dispose={null}>
            <mesh
                geometry={nodes.Case.geometry}
                material={nodes.Case.material}
                position={[0.59, 0, 0]}
            />
            <mesh
                geometry={nodes.Keyboard_cable.geometry}
                material={nodes.Keyboard_cable.material}
                position={[0.59, 0, 0]}
            />
            <mesh
                geometry={nodes.Keycaps.geometry}
                material={materials["Keycap material"]}
                position={[0.59, 0, 0]}
            />
        </group>
    );
}

useGLTF.preload("/models/keyboardModel.gltf");
